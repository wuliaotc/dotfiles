#include <algorithm>
#include <functional>
#include <iostream>
#include <stack>
#include <stdio.h>
#include <vector>
using std::vector;
inline int minInOrder(vector<int> &nums, int l, int r) {
  int res = INT32_MAX;
  for (; l <= r; l++) {
    if (res > nums[l])
      res = nums[l];
  }

  return res;
}
int minNumberInRotateArray(vector<int> nums) {
  if (nums.empty())
    return 0;
  int l = 0;
  int r = nums.size() - 1;
  while (l < r) {
    int mid = (l + r) >> 1;
    if (nums[l] < nums[r]) {
      r = mid;
    } else if (nums[l] > nums[r]) {
      l = mid+1;
    } else if (nums[r] == nums[mid]) {
      l++;
    }
  }
	return nums[l];
}
void testfunc(int n) {
  vector<int> nums(n);
  for (int i = 0; i < n; i++) {
    int j = 0;
    while (j < n) {
      nums[(i + j) % n] = j;
      j++;
    }
    for (auto &v : nums)
      std::cout << v << ' '<<std::flush;
		std::cout << "res: " << minNumberInRotateArray(nums) << std::endl;
  }
}
int main() 
{
	testfunc(7);
}
